// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package sqlc

import (
	"net/netip"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type EmailVertify struct {
	ID        string    `json:"id"`
	Email     string    `json:"email"`
	IsUsed    bool      `json:"is_used"`
	CreatedAt time.Time `json:"created_at"`
	ExpiresAt time.Time `json:"expires_at"`
}

type Permission struct {
	ID          int32       `json:"id"`
	Name        string      `json:"name"`
	Resource    string      `json:"resource"`
	Actions     string      `json:"actions"`
	Description pgtype.Text `json:"description"`
}

type Role struct {
	ID          int32       `json:"id"`
	Name        string      `json:"name"`
	Description pgtype.Text `json:"description"`
}

type RolePermission struct {
	RoleID       int32 `json:"role_id"`
	PermissionID int32 `json:"permission_id"`
}

type User struct {
	ID           pgtype.UUID        `json:"id"`
	GoogleID     pgtype.Text        `json:"google_id"`
	FacebookID   pgtype.Text        `json:"facebook_id"`
	Email        string             `json:"email"`
	Account      pgtype.Text        `json:"account"`
	PasswordHash pgtype.Text        `json:"password_hash"`
	Name         pgtype.Text        `json:"name"`
	IsAdmin      bool               `json:"is_admin"`
	IsActive     bool               `json:"is_active"`
	LineUserID   pgtype.Text        `json:"line_user_id"`
	LineLinkedAt pgtype.Timestamptz `json:"line_linked_at"`
	CreatedAt    time.Time          `json:"created_at"`
}

type UserRole struct {
	UserID pgtype.UUID `json:"user_id"`
	RoleID int32       `json:"role_id"`
}

type UserSession struct {
	ID             pgtype.UUID        `json:"id"`
	UserID         pgtype.UUID        `json:"user_id"`
	AccessToken    string             `json:"access_token"`
	RefreshToken   string             `json:"refresh_token"`
	IpAddress      netip.Addr         `json:"ip_address"`
	DeviceInfo     string             `json:"device_info"`
	Region         pgtype.Text        `json:"region"`
	UserAgent      pgtype.Text        `json:"user_agent"`
	IsActive       pgtype.Bool        `json:"is_active"`
	LastActivityAt time.Time          `json:"last_activity_at"`
	CreatedAt      time.Time          `json:"created_at"`
	ExpiresAt      time.Time          `json:"expires_at"`
	RevokedAt      pgtype.Timestamptz `json:"revoked_at"`
}
